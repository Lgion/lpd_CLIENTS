import { useState, useEffect, useContext } from 'react'
import Image from "next/image"
import Link from "next/link";
import Head from "next/head"
import AuthContext from "../../stores/authContext.js"
import mongoose from 'mongoose'
// import SliderInArticle from '../../components/_/SliderInArticle'
import Carousel from '../../components/_/Carousel'
// import Nav from '../../../components/Nav.jsx'
import { carouselBolobi_ } from "../../assets/carousels.js"
import LocateBolobi from "./_/LocateBolobi";
import Article from "./_/Article";
import ReserveForm from "./_/ReserveForm/index.jsx";
import { getPostsBy } from '../../components/_/Blog/_/lib/api'
import BlogCategory from '../../components/_/Blog/BlogCategory'
import Slider from "../api/_/models/Slider"

let carouselBolobi = carouselBolobi_.filter(elt => elt[Object.keys(elt)[0]] != "ecole-primaire-bolobi")

export default function LieuxActivites({ categoryPosts,diapos }) {
    // let {} = useContext(AuthContext)
    const headings = {
        h3: "CATÉGORIE: \"SANCTUAIRE NOTRE DAME DU ROSAIRE DE BOLOBI\""
    }
    , [showArticle, setShowArticle] = useState(true)


    console.log(diapos)
    console.log(carouselBolobi)

    return <>
        <Head>
            <title>Create Next Appppp</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="sanctuaire_ndr">
            
            <Article />
            <Carousel diapos={diapos} titre={"TEST - EXEMPLE: "} icon="2" sommaire="AUTRE TITRE SOMMAIRE" />
            <LocateBolobi />
            <ReserveForm />
            <BlogCategory {...{ categoryPosts, headings, className: "sndr" }} />
            
        </main>
    </>
}


export const getStaticProps = async () => {
    const categoryPosts = await getPostsBy(
        "category"
        , "sanctuaire"
    )

    const db = await mongoose.connect('mongodb+srv://archist:1&Bigcyri@cluster0.61na4.mongodb.net/?retryWrites=true&w=majority',
      {
        useNewUrlParser: true,
        useUnifiedTopology: true
      }
    )
    .then(() => console.log('Connexion à MongoDB réussie !'))
    .catch(() => console.log('Connexion à MongoDB échouée !'))
    // console.log(Object.keys(db));
    // console.log(db.modelNames());
    // console.log(mongoose.modelNames());
    // console.log(mongoose.models);
    // console.log(db);
    let diapos = await mongoose?.model("Diapos_slider")
      ?.find({"identifiant_$_hidden": "home_0"})
      ?.then(r=>{
        console.log("HELOOOOOOOOOOOOOOOOOOO");
        console.log(r)
        return r
      }) || []
    diapos = JSON.parse(JSON.stringify(diapos))

    return {
        props: { categoryPosts, diapos },
    }
}
